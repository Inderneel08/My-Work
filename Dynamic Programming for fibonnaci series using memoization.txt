/// Dynamic Programming for fibonnaci series using memoization.
#include<bits/stdc++.h>
#include<cstdlib>
#include<fstream>
using namespace std;

int calls=0;

int compute_task(int n,int*arr)
{
    if(n<=1){
        calls++;
        arr[n]=n;
    }
    else{
        if(arr[n]==-1){
            calls++;
            arr[n]=compute_task(n-1,arr)+compute_task(n-2,arr);
        }
        else{
            return(arr[n]);
        }
    }
}

void compute_arrays(int*arr,int n)
{
    compute_task(n,arr);
}

int main()
{
    int n;
    cout<<"Enter the size of the array:"<<endl;
    cin>>n;

    int*arr=new int[n];

    for(int i=0;i<n;i++){
        arr[i]=-1;
    }

    compute_arrays(arr,n-1);

    cout<<"Total number of calls:"<<calls<<endl;
    
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}

