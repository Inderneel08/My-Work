/// Total number of spanning trees in a graph using Kirchoff's theorem.
#include<bits/stdc++.h>
#include<cstdlib>
#include<fstream>
using namespace std;

void print_matrix(int**arr,int vertices)
{
    for(int i=0;i<vertices;i++){
        for(int j=0;j<vertices;j++){
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
}
void add_edges(int src,int dest,int**arr)
{
    /// From src to dest.
    arr[src][dest]=1;

    /// From dest to src.
    arr[dest][src]=1;
}

int find_co_factor(int**arr,int vertices)
{
    /// Co-factor from (0,0) in matrix.
    /// vertices-1 => 4-1 = 3.
    /// vertices-2 => 4-2= 2.
    int sum=0;

    sum+=((arr[vertices-2][vertices-2]*arr[vertices-1][vertices-1])-(arr[vertices-1][vertices-2]*arr[vertices-2][vertices-1]));

    return(sum);
}

int number_of_spanning_trees(int**arr,int vertices)
{
    /// Replacing diagonal elements with degree of nodes.

    for(int i=0;i<vertices;i++){
        int sum=0;
        for(int j=0;j<vertices;j++){
            if(arr[i][j]==1){
                sum++;
            }
        }
        arr[i][i]=sum;
    }

    for(int i=0;i<vertices;i++){
        for(int j=0;j<vertices;j++){
            if(i!=j){
                if(arr[i][j]==1){
                    arr[i][j]=-1;
                }
            }
        }
    }

    return(find_co_factor(arr,vertices));
}

int main()
{
    int vertices,edges;
    
    int src,dest;

    cout<<"Total number of vertices"<<endl;
    
    cin>>vertices;

    cout<<"Total number of edges:"<<endl;

    cin>>edges;

    int**arr=new int*[vertices];
    
    for(int i=0;i<vertices;i++){
        arr[i]=new int[vertices];
    }

    for(int i=0;i<vertices;i++){
        for(int j=0;j<vertices;j++){
            arr[i][j]=0;
        }
    }

    for(int i=0;i<edges;i++){
        cin>>src;
        cin>>dest;
        add_edges(src,dest,arr);
    }

    cout<<"Total number of spanning trees:"<<number_of_spanning_trees(arr,vertices)<<endl;
}






